1. --help: 能夠告訴你指令的參數使用方式 (ex: date --help)
           注意:--help只能用在你"曾經"用過的指令上
                若你所要查的指令沒有用過或是它根本不是指令(有可能是檔案的格式)
                則必須用man才能找到

2. man: 查詢指令的用法和相關說明(ex: man date)
        (說明文件在/usr/share/doc)
         
        注意:man裡有許多的特殊意義，詳情請至指令辨識查詢
        
        man的主要內容:

       NAME	        簡短的指令、資料名稱說明
       SYNOPSIS	        簡短的指令下達語法(syntax)簡介
       DESCRIPTION	較為完整的說明，這部分最好仔細看看！
       OPTIONS	        針對 SYNOPSIS 部分中，有列舉的所有可用的選項說明
       COMMANDS	        當這個程式(軟體)在執行的時候，可以在此程式(軟體)中下達的指令
       FILES	        這個程式或資料所使用或參考或連結到的某些檔案
       SEE ALSO	        可以參考的，跟這個指令或資料有相關的其他說明！
       EXAMPLE	        一些可以參考的範例
 
       man的所有指令(注意:只能在man裡使用):

       空白鍵	        向下翻一頁
       [Page Down]	向下翻一頁
       [Page Up]	向上翻一頁
       [Home]	        去到第一頁
       [End]	        去到最後一頁
       /string	        向『下』搜尋 string 這個字串，如果要搜尋 vbird 的話，就輸入 /vbird
       ?string	        向『上』搜尋 string 這個字串
       n, N	        利用 / 或 ? 來搜尋字串時，可以用 n 來繼續下一個搜尋 (不論是 / 或 ?) ，可以利用 N 來進行『反向』搜尋。
                        EX:我以 /vbird 搜尋 vbird 字串， 那麼可以 n 繼續往下查詢，用 N 往上查詢。
                        若以 ?vbird 向上查詢 vbird 字串， 那我可以用 n 繼續『向上』查詢，用 N 反向查詢。
       q	結束這次的 man page
         
3.info:功能類似man，只是呈現方式不同，且只限info型的檔案才能用info的特殊功能(ex: info 某咚咚)
       (支援info指令的文件預設是放置在/usr/share/info/)

    用info所開啟的說明文件中，第一行裡面的資料意義為：

    File：代表這個info page的資料是來自info.info檔案所提供的；
    Node：代表目前的這個頁面是屬於Top節點。 意思是info.info內含有很多資訊，而Top僅是info.info檔案內的一個節點內容而已；
    Next：下一個節點的名稱為Getting Started，你也可以按『N』到下個節點去；
    Up：回到上一層的節點總攬畫面，你也可以按下『U』回到上一層；
    Prev：前一個節點。但由於Top是info.info的第一個節點，所以上面沒有前一個節點的資訊。

    在menu中:可議用上下左右鍵來選擇你要的節點，可用tab來直接進各節點

    info的所有指令:

	空白鍵	向下翻一頁
	[Page Down]	向下翻一頁
	[Page Up]	向上翻一頁
	[tab]		在 node 之間移動，有 node 的地方，通常會以 * 顯示。
	[Enter]		當游標在 node 上面時，按下 Enter 可以進入該 node 。
	b		移動游標到該 info 畫面當中的第一個 node 處	
	e		移動游標到該 info 畫面當中的最後一個 node 處
	n		前往下一個 node 處
	p		前往上一個 node 處	
	u		向上移動一層
	s(/)		在 info page 當中進行搜尋
	h, ?		顯示求助選單
	q		結束這次的 info page

     注意:info可開許多的說明文件，但只有用"info"格式寫的才能用info模式下的特殊功能

4.whatis：它會顯示出該指令的簡單描述；
	EX：whatis ls
	顯示：ls (1)               - list directory contents

4.系統關機前檢查指令:

   1.who:看誰在線上
   
   2.netstat-a:看網路連線狀態

   3.ps -aux:看系統背景執行中的程式

5.關機/重新開機相關的指令:

   1.sync:資料同步寫入硬碟中的指令

     	用途:在電腦中運作的模式， 所有的資料都得要被讀入記憶體後才能夠被CPU所處理，但是資料又常常需要由記憶體寫回硬碟當中(例如儲存的動作)。 由於硬碟的速度太慢(相對於      	記憶體來說)，因此在Linux系統中，為了加快資料的讀取速度，所以在預設的情況中， 某些已經載入記憶體中的資料將不會直接被寫回硬碟，而是先暫存在記憶體當中，如此一來， 	如果一個資料被你重複的改寫，那麼由於他尚未被寫入硬碟中，因此可以直接由記憶體當中讀取出來， 在速度上一定是快上相當多的！
	不過，如此一來也造成些許的困擾，那就是萬一你的系統因為某些特殊情況造成不正常關機時，由於資料尚未被寫入硬碟當中，就會造成資料的更新不正常！

        注意:sync指令在你使用halt,shutdown,reboot時，會先自動執行         
             sync指令，一般使用者也可用，但只會儲存他自己的資料，但root大神來用，則會儲存整顆硬碟的資料


   2.shutdown:關機(ex:shutdown [option] [time])
              
              相關選項:
                   -P:等同poweroff
                  
                   -H:等同halt
  
                   -R:等同reboot

                   -K:嚇人用(提醒使用者何時關機)
                  

   3.reboot, halt, poweroff:
                   	reboot:重開機

                   	halt:停在目前的畫面

                  	poweroff:直接斷電

   注意:halt, poweroff, reboot, shutdown 等等，其實都是呼叫這個 systemctl 指令！
        所有的關機指令指限在root大神之下才能使用

6.召喚root大神的指令:su -

7.列出所有檔案和目錄的指令:ls -[option](ex: ls -al)
               
                     注意:若要顯示所有和部分檔名有關的檔案，則要在檔名後方加上*(ex:ls -al test*)

                     注意:ls的其他用途，請見14

8.檔案權限改變:

               1.chgrp:改變檔案所屬群組(指令:chgrp -[option] 群組名 要改的檔案名)(只限root大神可用)
               
                       注意:所有群組名稱接建立在/etc/group裡，若輸入的群組名稱不存在，則會出現:"chgrp: invalid group: '不存在的群組名稱'"
                            option中，-R是要將此檔案的所屬目錄的所有檔案給一起改群組)(指令:chgrp -R 群組名 要改的檔案名)

               2.chown:改變檔案擁有人(指令:chown -[option] 擁有人 要改的檔案名)(只限root大神可用)
		       option中，-R是要將此檔案的所屬目錄的所有檔案給一起改群組)(指令:chgrp -R 檔案擁有人 要改的檔案名 or chown -R 檔案擁有人:群組 要改的檔案名稱)
 
                       注意:所有帳號皆建立在/etc/passwd中；且chown也可同時改變檔案擁有人和群組(指令:chown 檔案擁有人:群組 要改的檔案名稱 or chown 檔案擁有人.群組名稱                               要改的檔名)(不建議用後者，因為有些帳號會有'.'，可能造成系統誤判)
                            
                       注意:chown也可只改變群組(指令:chown .群組 要改的檔案名稱)

               3.chmod:改變檔案權限(有數字變更法&符號變更法)(指令:chmod -[option] 三個相加後數字 檔案名稱或目錄 or chmod u=某,g=某,o=某 檔案名稱或目錄)
                       
                       數字法:
                              r:4
                              w:2
                              x:1
                              -:0
                       設:-rwxr-x-wx，表示此檔案之權限分別為4+2+1,4+0+1,0+2+1==753 
                       
                       若要改成-rw--wxrwx，則要打"chmod 637 檔案名稱或目錄"(637的由來:6=4+2+0,3=0+2+1,7=4+2+1)
                        
                       注意:chmod也有-R的選項，功能和上方皆一樣(請看chgrp)

                       
                       符號法:
                             u:檔案擁有者
                             g:檔案的群組
                             o:其他人
                             a:所有人(檔案擁有者+檔案的群組+其他人)
                             +:加入權限
                             -:去除權限
                             =:設定權限
                       設:-rwxr-x-wx,表示此檔案之權限分別是:u:rwx,g:rx,o:wx
                     
                       若要變更權限，如要改成-rw--wxrwx，則打"chmod u=rw,g=wx,o=rwx 檔案名稱或目錄"或是"chmod u-x,g-r+w,o+r 檔案名稱或目錄"

                       若想一次改所有人(u,g,o)的某權限，如要去掉r的權限，則輸入"chmod a-r 檔案名稱或目錄"
     
 
9.拷貝檔案的指令: cp 要複製的檔案的檔名 要接受複製的檔案的別的檔名(ex:cp [-option] test.txt test1.txt) 

		     或是複製大量檔案到一目錄(ex:cp [-option] test.txt test1.txt ... ~)  

	             -a : 複製一切的東西(包括讀取權限，時間)(和-p的功能一樣，只是-a更強) 
		    
                          注意:	-a 無法將"屬於誰"和"屬於哪個群組"給別人

		     -d : 複製連結檔屬性

		     -l : 複製連結檔的原始檔

		     -i : 複製前詢問你

		     -p : 複製時，連同被複製的檔案的屬性(時間，讀取權限)一起複製(而不是用系統原本的設定)

		     -r : 遞迴複製，目錄的複製常用

		     -s : 複製檔案的連結檔(複製捷徑)

		     -u : 當複製的檔案要移入同樣名稱的檔案(有可能是更新)，或是要移入的檔案名稱不存在

10.切換目錄的指令: cd 欲前往的目錄(ex: cd /tmp) 注意:若要前往的目錄位於別的目錄之下，則要打絕對路徑(ex: cd /tmp/hi)

11.建立新目錄的指令: mkdir 新目錄名稱(ex: mkdir hi)
  
                     注意: 若要建立目錄，請確認目錄的上層是存在的，否則會出現mkdir: cannot create directory ‘test1/test2/test3/test4’: No such file or directory

		     解決辦法: mkdir -P 新目錄名稱

		     mkdir -m 權限 新目錄名稱
		     
12.建立空檔案的指令: touch 檔案名稱 or touch 欲放置的目錄名稱/檔案名稱(ex: touch hii) or (ex: touch hi/hii) 注意:若未指定檔案建立的目錄，則該檔會直接存於檔案創立者的當												                    前目錄，如:創立者位於/tmp,則touch hii時，hii會存放於/tmp

13.刪除檔案的指令: rm 檔案名稱(ex: rm hii)

14.列出目錄和檔案的指令:ls [-option] 目錄名稱

			ls -a:列出所有目錄底下的所有東西(包含隱藏檔)

			ls -d:僅列出目錄底下的子目錄

			ls -l:列出詳細資料，包含檔案屬性和修改時間

			

15.移除空目錄的指令: rmdir 欲刪除目錄名稱(ex: rmdir hiii)

	             注意:若欲刪除目錄底下有檔案，則rmdir會無法使用

       	             解決方法:rm -r 目錄名稱(會刪掉此目錄底下的所有檔案)

	             rmdir -P 欲刪除目錄名稱:會將此空目錄和其上層目錄刪光光

16.移動目錄的指令: mv 欲移動的目錄名稱 要移動到的目錄名稱(ex:mv /bin/ls /root)
                      
17.PATH的指令: 查看PATH的詳細訊息: echo$PATh

	       加入新東西到PATH: PATH="${PATH}:/所要加的目錄名稱"


15.除了檔案名之外，還將檔的許可權、所有者、檔大小等資訊詳細列出來的指令: ls -l (ex: ls -l)

16.看檔案內容的指令: cat 檔名(ex: cat hii)

17.顯示目前在哪個目錄: pwd -P

18.更改檔案姓名：rename 要改的部分 改成甚麼 要改的檔案
		EX：rename .txt .py test.txt

19. echo使用： 
		echo 1234 		發出1234這訊息
		echo 1234 > 檔案		
		echo 檔案名?		找想要找的檔案     
		echo File1[a]		找File1開頭a結尾的檔案
		echo File1[^a] 		找File1開頭不是a結尾的檔案
		echo File1[a-z]     	找File1開頭a-z結尾的檔案
		echo F* 		找F開頭的檔案
		echo *e 		找e結尾的檔案
		

